{"version":3,"sources":["api.ts","services/todo.service.ts","context/todo.context.tsx","hooks/useModal.ts","components/TodoFilter/TodoFilter.tsx","components/TodoList/TodoList.tsx","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoListStatus","TodoContext","React","createContext","TodoProvider","children","useState","totalTodos","setTotalTodos","visibleTodos","setVisibleTodos","loadingTodoList","setLoadingTodoList","loadingUser","setLoadingUser","selectedTodo","setSelectedTodo","isOpen","setIsOpen","openModal","closeModal","useModal","useEffect","response","finally","Provider","value","handleTodosByFilter","options","filteredTodos","Array","from","query","normalizedQuery","toLowerCase","filter","todo","title","includes","todoListStatus","Active","completed","Completed","getFilteredTodos","handleSelectTodo","userId","user","discardSelectedTodo","isModalOpen","TodoFilter","useContext","setQuery","All","setTodoListStatus","className","onChange","event","target","type","placeholder","style","pointerEvents","length","onClick","TodoList","map","id","cn","Loader","TodoModal","href","email","name","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.08eff44a.chunk.js","sourcesContent":["import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import { Todo } from '../types/Todo';\n\nexport enum TodoListStatus {\n  All = 'all',\n  Active = 'active',\n  Completed = 'completed',\n}\n\nexport interface IOptionsTodos {\n  query: string,\n  todoListStatus: TodoListStatus\n}\nexport const getFilteredTodos = (\n  totalTodos: Todo[],\n  options: IOptionsTodos,\n) => {\n  let filteredTodos = Array.from(totalTodos);\n\n  if (options.query) {\n    const normalizedQuery = options.query.toLowerCase();\n\n    filteredTodos = filteredTodos.filter(todo => {\n      return todo.title.toLowerCase().includes(normalizedQuery);\n    });\n  }\n\n  if (options.todoListStatus) {\n    filteredTodos = filteredTodos.filter(todo => {\n      switch (options.todoListStatus) {\n        case TodoListStatus.Active:\n          return !todo.completed;\n        case TodoListStatus.Completed:\n          return todo.completed;\n        default:\n          return todo;\n      }\n    });\n  }\n\n  return filteredTodos;\n};\n","import React, { PropsWithChildren, useEffect, useState } from 'react';\nimport { Todo, TodoWithUser } from '../types/Todo';\nimport { getTodos, getUser } from '../api';\nimport { getFilteredTodos, IOptionsTodos } from '../services/todo.service';\nimport { useModal } from '../hooks/useModal';\n\ninterface ITodoContext {\n  visibleTodos: Todo[],\n  handleTodosByFilter: (options: IOptionsTodos) => void,\n  loadingTodoList: boolean,\n  handleSelectTodo: (todo: Todo) => void,\n  discardSelectedTodo: () => void,\n  isModalOpen: boolean,\n  loadingUser: boolean,\n  selectedTodo: TodoWithUser | null,\n}\n\nexport const TodoContext\n  = React.createContext<ITodoContext>({} as ITodoContext);\n\nexport const TodoProvider: React.FC<PropsWithChildren<{}>> = ({ children }) => {\n  const [totalTodos, setTotalTodos] = useState<Todo[]>([]);\n  const [visibleTodos, setVisibleTodos] = useState<Todo[]>([]);\n  const [loadingTodoList, setLoadingTodoList] = useState(true);\n  const [loadingUser, setLoadingUser] = useState(true);\n  const [selectedTodo, setSelectedTodo] = useState<TodoWithUser | null>(null);\n  const { isOpen, openModal, closeModal } = useModal();\n\n  useEffect(() => {\n    getTodos()\n      .then(\n        (response) => {\n          setTotalTodos(response);\n          setVisibleTodos(response);\n        },\n      )\n      .finally(() => setLoadingTodoList(false));\n  }, []);\n\n  const handleSelectTodo = (todo: Todo) => {\n    openModal();\n\n    getUser(todo.userId)\n      .then(response => setSelectedTodo({ ...todo, user: response }))\n      .finally(() => setLoadingUser(false));\n  };\n\n  const handleTodosByFilter = (options: IOptionsTodos) => {\n    const filteredTodos = getFilteredTodos(totalTodos, options);\n\n    setVisibleTodos(filteredTodos);\n  };\n\n  const discardSelectedTodo = () => {\n    setSelectedTodo(null);\n    closeModal();\n  };\n\n  return (\n    <TodoContext.Provider value={{\n      visibleTodos,\n      handleTodosByFilter,\n      loadingTodoList,\n      handleSelectTodo,\n      discardSelectedTodo,\n      isModalOpen: isOpen,\n      loadingUser,\n      selectedTodo,\n    }}\n    >\n      {children}\n    </TodoContext.Provider>\n  );\n};\n","import { useState } from 'react';\n\nexport const useModal = () => {\n  const [isOpen, setIsOpen] = useState(false);\n\n  const openModal = () => {\n    setIsOpen(true);\n  };\n\n  const closeModal = () => {\n    setIsOpen(false);\n  };\n\n  return {\n    isOpen,\n    openModal,\n    closeModal,\n  };\n};\n","import {\n  ChangeEvent,\n  useContext,\n  useEffect,\n  useState,\n} from 'react';\nimport { TodoContext } from '../../context/todo.context';\nimport { TodoListStatus } from '../../services/todo.service';\n\nexport const TodoFilter = () => {\n  const { handleTodosByFilter } = useContext(TodoContext);\n\n  const [query, setQuery] = useState('');\n  const [todoListStatus, setTodoListStatus]\n    = useState<TodoListStatus>(TodoListStatus.All);\n\n  useEffect(() => {\n    handleTodosByFilter({ query, todoListStatus });\n  }, [query, todoListStatus]);\n\n  const handleSelectChange = (event: ChangeEvent<HTMLSelectElement>) => {\n    switch (event.target.value) {\n      case TodoListStatus.Active:\n        setTodoListStatus(TodoListStatus.Active);\n        break;\n\n      case TodoListStatus.Completed:\n        setTodoListStatus(TodoListStatus.Completed);\n        break;\n\n      case TodoListStatus.All:\n      default:\n        setTodoListStatus(TodoListStatus.All);\n        break;\n    }\n  };\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            onChange={handleSelectChange}\n            value={todoListStatus}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={(event) => setQuery(event.target.value)}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {\n            query.length > 0 && (\n              // eslint-disable-next-line jsx-a11y/control-has-associated-label\n              <button\n                data-cy=\"clearSearchButton\"\n                type=\"button\"\n                className=\"delete\"\n                onClick={() => setQuery('')}\n              />\n            )\n          }\n        </span>\n      </p>\n    </form>\n  );\n};\n","import React, { useContext } from 'react';\nimport cn from 'classnames';\nimport { TodoContext } from '../../context/todo.context';\n\nexport const TodoList: React.FC = () => {\n  const { visibleTodos, handleSelectTodo, selectedTodo }\n    = useContext(TodoContext);\n\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th />\n        </tr>\n      </thead>\n\n      <tbody>\n        {\n          visibleTodos.map(\n            todo => (\n              <tr\n                data-cy=\"todo\"\n                className=\"\"\n                key={todo.id}\n              >\n                <td className=\"is-vcentered\">{todo.id}</td>\n                <td className=\"is-vcentered\">\n                  {todo.completed && (\n                    <span className=\"icon\" data-cy=\"iconCompleted\">\n                      <i className=\"fas fa-check\" />\n                    </span>\n                  )}\n                </td>\n                <td className=\"is-vcentered is-expanded\">\n                  <p className={cn({\n                    'has-text-danger': !todo.completed,\n                    'has-text-success': todo.completed,\n                  })}\n                  >\n                    {todo.title}\n                  </p>\n                </td>\n                <td className=\"has-text-right is-vcentered\">\n                  <button\n                    data-cy=\"selectButton\"\n                    className=\"button\"\n                    type=\"button\"\n                    onClick={() => handleSelectTodo(todo)}\n                  >\n                    <span className=\"icon\">\n                      <i className={cn('far', {\n                        'fa-eye-slash': selectedTodo?.id === todo.id,\n                        'fa-eye': selectedTodo?.id !== todo.id,\n                      })}\n                      />\n                    </span>\n                  </button>\n                </td>\n              </tr>\n            ),\n          )\n        }\n      </tbody>\n    </table>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useContext } from 'react';\nimport { Loader } from '../Loader';\nimport { TodoContext } from '../../context/todo.context';\n\nexport const TodoModal: React.FC = () => {\n  const { selectedTodo, discardSelectedTodo } = useContext(TodoContext);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!selectedTodo ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              Todo #\n              {selectedTodo.id}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={discardSelectedTodo}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {selectedTodo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {/* <strong className=\"has-text-success\">Done</strong> */}\n              {\n                selectedTodo.completed\n                  ? <strong className=\"has-text-success\">Done</strong>\n                  : <strong className=\"has-text-danger\">Planned</strong>\n              }\n\n              {' by '}\n\n              <a href={`{mailto:${selectedTodo.user.email}}`}>\n                {selectedTodo.user.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useContext } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoContext } from './context/todo.context';\nimport { TodoList } from './components/TodoList';\nimport { Loader } from './components/Loader';\nimport { TodoModal } from './components/TodoModal';\n\nexport const App: React.FC = () => {\n  const { loadingTodoList, isModalOpen } = useContext(TodoContext);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter />\n            </div>\n\n            <div className=\"block\">\n              {\n                loadingTodoList\n                  ? <Loader />\n                  : <TodoList />\n              }\n            </div>\n          </div>\n          { isModalOpen && <TodoModal />}\n        </div>\n      </div>\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\nimport { TodoProvider } from './context/todo.context';\n\nReactDOM.render(\n  <TodoProvider>\n    <App />\n  </TodoProvider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}